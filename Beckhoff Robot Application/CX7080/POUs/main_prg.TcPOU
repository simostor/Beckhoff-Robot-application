<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="main_prg" Id="{d2e50d88-1667-4ab6-82f1-5fbb225b1eb8}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM main_prg
VAR
	last_state : state_enum;
	fb_Startup : FB_Startup;
	fb_Auto : FB_Auto;
	fb_Comm_Fault : FB_Comm_Fault;
	fb_Emg_Stop : FB_Emg_Stop;
	fb_Jog_Cartesian : FB_Jog_Cartesian;
	fb_Manual : FB_Manual;
	fb_Jog_Joint: FB_Jog_Joint;
	fb_ModbusComm_CyclicPoll: FB_ModbusComm_CyclicPoll;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT GVL.PB_EMG_STOP AND NOT (gvl.system_state = state_enum.startup_mode) THEN
	GVL.system_state := state_enum.emg_stop_mode;
ELSIF GVL.modbus_comm_fault AND NOT (gvl.system_state = state_enum.startup_mode)  THEN
	GVL.system_state := state_enum.comm_fault_mode;
END_IF


CASE gvl.system_state OF
state_enum.startup_mode:
	fb_Startup();
state_enum.jog_joint_mode:
	fb_Jog_Joint(
	StopServos:= , 
	RampSpeedSetting:= GVL.SW_Slow_Fast, 
	BaseIncreaseCW:= GVL.PB_J1_CW, 
	BaseIncreaseCCW:= GVL.PB_J1_CCW, 
	ShoulderIncreaseCW:= GVL.PB_J2_CW, 
	ShoulderIncreaseCCW:= GVL.PB_J2_CCW, 
	ElbowIncreaseCW:= GVL.PB_J3_CW, 
	ElbowIncreaseCCW:= GVL.PB_J3_CCW, 
	RampSpeedLow:= GVL.LowSpeedSetting, 
	RampSpeedHigh:= GVL.HighSpeedSetting, 
	BaseAngleMin:= GVL.BaseAngleMin, 
	BaseAngleMax:= GVL.BaseAngleMax, 
	ShoulderAngleMin:= GVL.ShoulderAngleMin, 
	ShoulderAngleMax:= GVL.ShoulderAngleMax, 
	ElbowAngleMin:= GVL.ElbowAngleMin, 
	ElbowAngleMax:= GVL.ElbowAngleMax, 
	RampCycleTime:= T#10MS, 
	BaseStartPos:= GVL.J1_Home_Pos, 
	ShoulderStartPos:= GVL.J2_Home_Pos, 
	ElbowStartPos:= GVL.J3_Home_Pos, 
	BaseServoOutput=> GVL.MB_Write_J1, 
	ShoulderServoOutput=> GVL.MB_Write_J2, 
	ElbowServoOutput=> GVL.MB_Write_J3);
state_enum.jog_cartesian_mode:
	fb_Jog_Cartesian();
state_enum.manual_mode:
	fb_Manual();
state_enum.emg_stop_mode:
	fb_Emg_Stop();
state_enum.comm_fault_mode:
	fb_Comm_Fault();
state_enum.auto_mode:
	fb_Auto();
END_CASE

IF NOT (GVL.system_state = state_enum.startup_mode OR GVL.system_state = state_enum.emg_stop_mode) THEN
	fb_ModbusComm_CyclicPoll(
	Write_J1:= GVL.MB_Write_J1, 
	Write_J2:= GVL.MB_Write_J2, 
	Write_J3:= GVL.MB_Write_J3, 
	Write_Gripper:= GVL.MB_Write_Gripper, 
	Write_Watchdog:= GVL.MB_Write_Watchdog, 
	Write_Blank1:= GVL.MB_Write_Blank1, 
	Write_Blank2:= GVL.MB_Write_Blank2, 
	Write_Blank3:= GVL.MB_Write_Blank3, 
	Write_Blank4:= GVL.MB_Write_Blank4, 
	Write_Blank5:= GVL.MB_Write_Blank5, 
	Read_Watchdog=> GVL.MB_Read_Watchdog, 
	Read_Blank2=> GVL.MB_Read_Blank2, 
	Read_Blank3=> GVL.MB_Read_Blank3, 
	Read_Blank4=> GVL.MB_Read_Blank4, 
	Read_Blank5=> GVL.MB_Read_Blank5, 
	Read_Blank6=> GVL.MB_Read_Blank6, 
	Read_Blank7=> GVL.MB_Read_Blank7, 
	Read_Blank8=> GVL.MB_Read_Blank8, 
	Read_Blank9=> GVL.MB_Read_Blank9, 
	Read_Blank10=> GVL.MB_Read_Blank10);

END_IF;
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>